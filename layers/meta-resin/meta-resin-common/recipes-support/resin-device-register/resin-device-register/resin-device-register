#!/bin/bash

help () {
    cat << EOF
Register a new resin device
resin-device-register [options]

Options:
    -h, --help
        Display this help and exit.

    -c, --config-path CONFIG_PATH
        Use a non default config.json file.
        This argument is passed to resin-vars script.
EOF
}

# Parse arguments
while [[ $# > 0 ]]; do
    key=$1
    case $key in
        -h|--help)
            help
            exit 0
            ;;
        -c|--config-path)
            RESIN_VARS_ARGS="$RESIN_VARS_ARGS --config-path $2"
            shift
            ;;
        *)
            echo "[WARNING] $0 : Argument '$1' unknown. Ignoring."
            ;;
    esac
    shift
done

source /usr/sbin/resin-vars $RESIN_VARS_ARGS

if [ -z "$API_ENDPOINT" -o -z "$CONFIG_PATH" ]; then
    echo "[ERROR] resin-device-register : Please set API_ENDPOINT and CONFIG_PATH environment variables."
    exit 1
fi

while true; do
    if curl -sL -w '%{http_code}' $API_ENDPOINT/ping -o /dev/null | egrep "20[0-9]|30[0-9]" >/dev/null
    then
        read api_key user_id application_id device_type uuid <<<$(jq -r '.apiKey,.userId,.applicationId,.deviceType // "raspberry-pi",.uuid' $CONFIG_PATH)

        status_code=$(curl -s -X POST -w "%{http_code}" \
                    -o /var/log/register-device-curl.log \
                    -d "user=$user_id" \
                    -d "application=$application_id" \
                    -d "uuid=$uuid"  \
                    --data-urlencode "device_type=$device_type" \
                    "$API_ENDPOINT/ewa/device?apikey=$api_key")

        if [ "$status_code" -eq 201 ]; then
            device_id=$(jq -r '.id' /var/log/register-device-curl.log)
            config_json=`cat $CONFIG_PATH`
            echo $config_json | jq ".registered_at=\"`date +%s`\"|.deviceId=\"$device_id\"" > $CONFIG_PATH
            echo "[INFO] resin-device-register : Registered device with ID: $device_id and UUID: $uuid."
            exit 0
        elif [ "$status_code" -eq 409 ]; then
            echo "[INFO] resin-device-register : Device already registered."
            exit 0
        else
            echo "[ERROR] resin-device-register : Failed to register device. Status code: $status_code"
            exit 1
        fi
    else
        echo  "[WARNING] resin-device-register: Not connected. Trying again..."
        sleep 2
    fi
done
